{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/templates/blog-post.js"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","Link","to","color","textDecoration","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","marginTop","Date","getFullYear","href","post","allWordpress","edges","node","console","log","dangerouslySetInnerHTML","__html","content","author","name","date"],"mappings":"6LAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,0BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,uBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,sBAAIL,MAAO,CAAEG,OAAQ,IACnB,gBAAC,EAAAG,KAAD,CACEC,GAAG,IACHP,MAAO,CACLQ,MAAM,QACNC,eAAe,SAGhBV,OAWXD,EAAOY,aAAe,CACpBX,UAAU,IAGZ,QCaA,EAxCe,SAAC,GAAkB,IAAD,EAAfY,EAAe,EAAfA,SACVC,GAAOC,oBAAe,cAU5B,OACE,gCACE,gBAAC,EAAD,CAAQd,WAAW,UAAAa,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,uBACEhB,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,4BAAOM,GACP,0BACEX,MAAO,CACLiB,UAAU,SAFd,MAKK,IAAIC,MAAOC,cALhB,mBAOE,qBAAGC,KAAK,4BAAR,e,2ECtCV,mBAAe,GAAe,IACtBC,EADqB,EAAXT,KACEU,aAAaC,MAAM,GAAGC,KAExC,OADAC,QAAQC,IAAIL,GAEV,gBAAC,IAAD,KACE,2BACE,0BAAKA,EAAKL,OACV,uBAAKW,wBAAyB,CAAEC,OAAQP,EAAKQ,WAC7C,iCAASR,EAAKS,OAAOC,KAArB,KACA,iCAASV,EAAKW,KAAd,MAEF,2BACA,gBAAC,EAAA1B,KAAD,CAAMC,GAAG,UAAT","file":"component---src-templates-blog-post-js-6e9b12ef17d782655b9e.js","sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql, Link } from \"gatsby\"\n\n\nexport default ({ data }) => {\n  const post = data.allWordpress.edges[0].node\n  console.log(post)\n  return (\n    <Layout>\n      <div>\n        <h1>{post.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.content }} />\n        <p> By: {post.author.name} </p>\n        <p> On: {post.date} </p>\n      </div>\n      <br></br>\n      <Link to=\"/blog/\">Volver al inicio del blog</Link>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    allWordpress(filter: { slug: { eq: $slug } }) {\n      edges {\n        node {\n            id\n            title\n            date\n            date_updated\n            slug\n            status\n            media {\n                    id\n                    guid {\n                        rendered\n                    }\n            }\n            content\n            author {\n                    id\n                    name\n            }\n        }\n      }\n    }\n}`;"],"sourceRoot":""}